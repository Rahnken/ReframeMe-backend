// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

model User {
  user_id        String        @id @default(cuid())
  username       String        @unique
  email          String        @unique
  hashedPassword String
  createdOn      DateTime?     @default(now())
  lastLogin      DateTime?
  goals          Goal[]
  profiles       UserProfiles?
  groups         Group_Users[]  
}

model Goal {
  id          String         @id @default(cuid())
  title       String
  description String
  user_id     String
  isPrivate   Boolean        @default(true)
  user        User           @relation(fields: [user_id], references: [user_id])
  goalWeeks   GoalProgress[]
  sharedGoals SharedGoal[]
}

model GoalProgress {
  id              String  @id @default(cuid())
  goal_id         String
  feedback        String?
  weekNumber      Int
  targetAmount    Int
  completedAmount Int?
  goal            Goal    @relation(fields: [goal_id], references: [id])

  @@unique([goal_id, weekNumber]) // Each goal can only have one progress entry per week
}

model SharedGoal {
  id       String @id @default(cuid())
  goal_id  String
  group_id String
  goal     Goal   @relation(fields: [goal_id], references: [id])
  group    Group  @relation(fields: [group_id], references: [id])

  @@unique([goal_id, group_id]) // A goal can be shared with a group only once
}

model UserProfiles {
  profile_id     String       @id @default(cuid())
  user_id        String       @unique
  firstName      String?
  lastName       String?
  dateOfBirth    DateTime?
  country        String?
  timezone       String?
  userSetting_id String       @unique
  user           User         @relation(fields: [user_id], references: [user_id])
  userSettings   UserSettings @relation(fields: [userSetting_id], references: [userSetting_id])

  @@unique([user_id, userSetting_id])
}

model UserSettings {
  userSetting_id  String        @id @default(cuid())
  theme           String?       @default("reframeDark")
  profileComplete Boolean       @default(false)
  userProfile     UserProfiles?
}

model Group_Users {
  id       String @id @default(cuid())
  group_id String
  user_id  String
  role     Role
  group    Group  @relation(fields: [group_id], references: [id])
  user     User   @relation(fields: [user_id], references: [user_id])

  @@unique([group_id, user_id]) // Ensure each user is only added once per group
}

model Group {
  id          String        @id @default(cuid())
  name        String
  description String
  users       Group_Users[]
  sharedGoals SharedGoal[]
}
